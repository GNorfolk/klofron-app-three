/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/6NQumgiIDxw
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Label } from "../ui/label"
import { Input } from "../ui/input"
import { Button } from "../ui/button"
import Link from "next/link"
import { QueryClientProvider, useQuery } from '@tanstack/react-query'

import type {
  GetServerSidePropsContext,
  InferGetServerSidePropsType,
} from "next"
import { getCsrfToken } from "next-auth/react"

import { FormEventHandler, useState } from "react"
import { signIn } from "next-auth/react"

export function Login({ csrfToken }) {
  const [userInfo, setUserInfo] = useState({email: "", password: ""})
  const handleSubmit:FormEventHandler<HTMLFormElement> = async (e) => {
    // validate your userinfo
    e.preventDefault()
    const res = await signIn('credentials', {
      email: userInfo.email,
      password: userInfo.password,
      // redirect: false
      callbackUrl: "/"
    })
    console.log(res)
  }
  return (
    <div>
      <form onSubmit={handleSubmit}>
        <h1>Login</h1>
        <input
          value={userInfo.email}
          onChange={({ target }) =>
            setUserInfo({ ...userInfo, email: target.value })
          }
          type="email"
          placeholder="john@email.com"
        />
        <input
          value={userInfo.password}
          onChange={({ target }) =>
            setUserInfo({ ...userInfo, password: target.value})
          }
          type="password"
          placeholder="**********"
        />
        <input type="submit" value="Login" />
      </form>
    </div>
  )
}

// export function Login({
//   csrfToken,
// }: InferGetServerSidePropsType<typeof getServerSideProps>) {

//   const { isLoading, error, data } = useQuery({
//     queryKey: ['familyData'],
//     queryFn: () =>
//       fetch(process.env.NEXT_PUBLIC_API_HOST + '/api/auth/csrf').then(
//         (res) => res.json(),
//       ),
//   })

//   console.log(data)

//   return (
//     <form method="post" action="/api/auth/callback/credentials">
//       <input name="csrfToken" type="hidden" defaultValue={"a7ebcc2eca965e4acd5306ca329b810eef8fc27813c0750b12ad5e2e8fbbcdaa"} />
//       <label>
//         Username
//         <input name="username" type="text" />
//       </label>
//       <label>
//         Password
//         <input name="password" type="password" />
//       </label>
//       <button type="submit">Sign in</button>
//     </form>
//   )
// }

// export async function getServerSideProps(context: GetServerSidePropsContext) {
//   return {
//     props: {
//       csrfToken: await getCsrfToken(context),
//     },
//   }
// }

// export function Login() {
//   return (
//     <div className="w-full max-w-md mx-auto p-6 space-y-8 rounded-md shadow bg-background">
//       <div className="space-y-2 text-center">
//         <h2 className="mt-6 text-center text-3xl font-bold tracking-tight text-foreground">Sign in to your account</h2>
//         <p className="mt-2 text-center text-sm text-muted-foreground">
//             Or{" "}
//             <Link href="#" className="font-medium text-primary hover:underline" prefetch={false}>
//               register for a new account
//             </Link>
//           </p>
//       </div>
//       <form className="space-y-6" action="http://localhost:3000/api/auth/callback/credentials" method="POST">
//         <div className="space-y-2">
//           <Label htmlFor="input-email-for-credentials-provider">Email</Label>
//           <Input id="input-email-for-credentials-provider" name="email" type="email" placeholder="email@email.com" />
//         </div>
//         <div className="space-y-2">
//           <Label htmlFor="input-password-for-credentials-provider">Password</Label>
//           <Input id="input-password-for-credentials-provider" name="password" type="password" placeholder="********" />
//         </div>
//         <div className="flex items-center justify-between">
//           <Button type="submit" className="w-full">
//             Login
//           </Button>
//         </div>
//       </form>
//       <div className="text-center text-muted-foreground">
//         <Link href="#" className="underline underline-offset-4 hover:text-primary" prefetch={false}>
//           Forgot your password?
//         </Link>
//       </div>
//     </div>
//   )
// }

// export function Login() {
//   return (
//     <div className="w-full max-w-md mx-auto p-6 space-y-8 rounded-md shadow bg-background">
//       <div className="space-y-2 text-center">
//         <h2 className="mt-6 text-center text-3xl font-bold tracking-tight text-foreground">Sign in to your account</h2>
//         <p className="mt-2 text-center text-sm text-muted-foreground">
//             Or{" "}
//             <Link href="#" className="font-medium text-primary hover:underline" prefetch={false}>
//               register for a new account
//             </Link>
//           </p>
//       </div>
//       <form className="space-y-6">
//         <div className="space-y-2">
//           <Label htmlFor="username">Username</Label>
//           <Input id="username" type="text" placeholder="johndoe" />
//         </div>
//         <div className="space-y-2">
//           <Label htmlFor="password">Password</Label>
//           <Input id="password" type="password" placeholder="••••••••" />
//         </div>
//         <div className="flex items-center justify-between">
//           <Button type="submit" className="w-full">
//             Login
//           </Button>
//         </div>
//       </form>
//       <div className="text-center text-muted-foreground">
//         <Link href="#" className="underline underline-offset-4 hover:text-primary" prefetch={false}>
//           Forgot your password?
//         </Link>
//       </div>
//     </div>
//   )
// }
